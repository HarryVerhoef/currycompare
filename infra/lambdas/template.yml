---
AWSTemplateFormatVersion: "2010-09-09"
Description: Stack encompassing all the lambdas
Parameters:
  Runtime:
    Type: String
  S3Bucket:
    Type: String
  GetCurryhousesFunctionName:
    Type: String
  GetCurryhousesS3Key:
    Type: String
  ApiArn:
    Type: String

Resources:
  GetCurryhousesFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref GetCurryhousesFunctionName
      Runtime: !Ref Runtime
      PackageType: Zip
      Handler: index.handler
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref GetCurryhousesS3Key
      Role:
        Fn::GetAtt: [GetCurryhousesRole, Arn]
  
  GetCurryhousesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaLoggingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'secretsmanager:GetSecretValue'
                Resource: '*'

  GetCurryhousesPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: 
        Fn::GetAtt: [GetCurryhousesFunction, Arn]
      Principal: apigateway.amazonaws.com
      SourceArn: !Ref ApiArn