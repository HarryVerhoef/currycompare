AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  PrimaryAvailabilityZone:
    Type: String
  SecondaryAvailabilityZone:
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
  
  # Subnets
  LambdaSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Ref PrimaryAvailabilityZone

  RDSSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Ref PrimaryAvailabilityZone

  RDSSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Ref SecondaryAvailabilityZone
  
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to RDS
      VpcId: !Ref VPC

  RDSSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
      GroupId: !GetAtt RDSSecurityGroup.GroupId

  # Security Group for Lambda
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group composed of Lambdas
      VpcId: !Ref VPC

  LambdaSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      DestinationSecurityGroupId: !GetAtt RDSSecurityGroup.GroupId
      GroupId: !GetAtt LambdaSecurityGroup.GroupId
    
  SecretManagerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.secretsmanager
      VpcId: !Ref VPC
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref LambdaSubnet
      SecurityGroupId:
        - !GetAtt LambdaSecurityGroup.GroupId
